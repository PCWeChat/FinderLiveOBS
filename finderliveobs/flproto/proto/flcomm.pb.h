// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: flcomm.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_flcomm_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_flcomm_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3020000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3020000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_flcomm_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_flcomm_2eproto {
  static const uint32_t offsets[];
};
namespace flremoting {
namespace protocol {
class BaseResponse;
struct BaseResponseDefaultTypeInternal;
extern BaseResponseDefaultTypeInternal _BaseResponse_default_instance_;
}  // namespace protocol
}  // namespace flremoting
PROTOBUF_NAMESPACE_OPEN
template<> ::flremoting::protocol::BaseResponse* Arena::CreateMaybeMessage<::flremoting::protocol::BaseResponse>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace flremoting {
namespace protocol {

// ===================================================================

class BaseResponse final :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:flremoting.protocol.BaseResponse) */ {
 public:
  inline BaseResponse() : BaseResponse(nullptr) {}
  ~BaseResponse() override;
  explicit PROTOBUF_CONSTEXPR BaseResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  BaseResponse(const BaseResponse& from);
  BaseResponse(BaseResponse&& from) noexcept
    : BaseResponse() {
    *this = ::std::move(from);
  }

  inline BaseResponse& operator=(const BaseResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline BaseResponse& operator=(BaseResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields<std::string>(::PROTOBUF_NAMESPACE_ID::internal::GetEmptyString);
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<std::string>();
  }

  static const BaseResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const BaseResponse* internal_default_instance() {
    return reinterpret_cast<const BaseResponse*>(
               &_BaseResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(BaseResponse& a, BaseResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(BaseResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BaseResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  BaseResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<BaseResponse>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)  final;
  void CopyFrom(const BaseResponse& from);
  void MergeFrom(const BaseResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(BaseResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "flremoting.protocol.BaseResponse";
  }
  protected:
  explicit BaseResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRetMsgFieldNumber = 2,
    kRetCodeFieldNumber = 1,
  };
  // optional string ret_msg = 2;
  bool has_ret_msg() const;
  private:
  bool _internal_has_ret_msg() const;
  public:
  void clear_ret_msg();
  const std::string& ret_msg() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_ret_msg(ArgT0&& arg0, ArgT... args);
  std::string* mutable_ret_msg();
  PROTOBUF_NODISCARD std::string* release_ret_msg();
  void set_allocated_ret_msg(std::string* ret_msg);
  private:
  const std::string& _internal_ret_msg() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_ret_msg(const std::string& value);
  std::string* _internal_mutable_ret_msg();
  public:

  // optional int32 ret_code = 1;
  bool has_ret_code() const;
  private:
  bool _internal_has_ret_code() const;
  public:
  void clear_ret_code();
  int32_t ret_code() const;
  void set_ret_code(int32_t value);
  private:
  int32_t _internal_ret_code() const;
  void _internal_set_ret_code(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:flremoting.protocol.BaseResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr ret_msg_;
  int32_t ret_code_;
  friend struct ::TableStruct_flcomm_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// BaseResponse

// optional int32 ret_code = 1;
inline bool BaseResponse::_internal_has_ret_code() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool BaseResponse::has_ret_code() const {
  return _internal_has_ret_code();
}
inline void BaseResponse::clear_ret_code() {
  ret_code_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline int32_t BaseResponse::_internal_ret_code() const {
  return ret_code_;
}
inline int32_t BaseResponse::ret_code() const {
  // @@protoc_insertion_point(field_get:flremoting.protocol.BaseResponse.ret_code)
  return _internal_ret_code();
}
inline void BaseResponse::_internal_set_ret_code(int32_t value) {
  _has_bits_[0] |= 0x00000002u;
  ret_code_ = value;
}
inline void BaseResponse::set_ret_code(int32_t value) {
  _internal_set_ret_code(value);
  // @@protoc_insertion_point(field_set:flremoting.protocol.BaseResponse.ret_code)
}

// optional string ret_msg = 2;
inline bool BaseResponse::_internal_has_ret_msg() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool BaseResponse::has_ret_msg() const {
  return _internal_has_ret_msg();
}
inline void BaseResponse::clear_ret_msg() {
  ret_msg_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& BaseResponse::ret_msg() const {
  // @@protoc_insertion_point(field_get:flremoting.protocol.BaseResponse.ret_msg)
  return _internal_ret_msg();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void BaseResponse::set_ret_msg(ArgT0&& arg0, ArgT... args) {
 _has_bits_[0] |= 0x00000001u;
 ret_msg_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:flremoting.protocol.BaseResponse.ret_msg)
}
inline std::string* BaseResponse::mutable_ret_msg() {
  std::string* _s = _internal_mutable_ret_msg();
  // @@protoc_insertion_point(field_mutable:flremoting.protocol.BaseResponse.ret_msg)
  return _s;
}
inline const std::string& BaseResponse::_internal_ret_msg() const {
  return ret_msg_.Get();
}
inline void BaseResponse::_internal_set_ret_msg(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  ret_msg_.Set(value, GetArenaForAllocation());
}
inline std::string* BaseResponse::_internal_mutable_ret_msg() {
  _has_bits_[0] |= 0x00000001u;
  return ret_msg_.Mutable(GetArenaForAllocation());
}
inline std::string* BaseResponse::release_ret_msg() {
  // @@protoc_insertion_point(field_release:flremoting.protocol.BaseResponse.ret_msg)
  if (!_internal_has_ret_msg()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  auto* p = ret_msg_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (ret_msg_.IsDefault()) {
    ret_msg_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void BaseResponse::set_allocated_ret_msg(std::string* ret_msg) {
  if (ret_msg != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  ret_msg_.SetAllocated(ret_msg, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (ret_msg_.IsDefault()) {
    ret_msg_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:flremoting.protocol.BaseResponse.ret_msg)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace protocol
}  // namespace flremoting

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_flcomm_2eproto
