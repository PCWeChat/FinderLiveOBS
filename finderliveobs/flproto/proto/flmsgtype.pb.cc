// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: flmsgtype.proto

#include "flmsgtype.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace flremoting {
namespace protocol {
}  // namespace protocol
}  // namespace flremoting
namespace flremoting {
namespace protocol {
bool MsgType_IsValid(int value) {
  switch (value) {
    case 10001:
    case 10002:
    case 10003:
    case 10004:
    case 10005:
    case 10006:
    case 10007:
    case 10008:
    case 10009:
    case 10010:
    case 10011:
    case 10012:
    case 10013:
    case 10014:
    case 10015:
    case 10016:
    case 10017:
    case 10018:
    case 10019:
    case 10020:
    case 10021:
    case 10022:
    case 10023:
    case 10024:
    case 10025:
    case 10026:
    case 10027:
    case 10028:
    case 10029:
    case 10030:
    case 10031:
    case 10032:
    case 10033:
    case 10034:
    case 10035:
    case 10036:
    case 10037:
    case 10038:
    case 10039:
    case 10040:
    case 10041:
      return true;
    default:
      return false;
  }
}

static ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<std::string> MsgType_strings[41] = {};

static const char MsgType_names[] =
  "GETINPUTVOLUMEREQ"
  "GETINPUTVOLUMERESP"
  "GETOUTPUTVOLUMEREQ"
  "GETOUTPUTVOLUMERESP"
  "INPUTVOLUMEINFO"
  "LIVEOUTPUT_FRAME_AUDIO"
  "LIVEOUTPUT_FRAME_VIDEO"
  "LIVEOUTPUT_START"
  "LIVEOUTPUT_STOP"
  "MEANRATEINFO"
  "MOUSEMENUEVENT"
  "OBSCAMERAVIDEOBEAUTIFYREQ"
  "OBSCAMERAVIDEOBEAUTIFYRESP"
  "OBSCURSORINFO"
  "OBSDEVICEINFO"
  "OBSFPSINFO"
  "OBSIMAGESOURCE"
  "OBSITEMEDIT"
  "OBSITEMEDITINFOREQ"
  "OBSITEMEDITINFORESP"
  "OBSITEMINFO"
  "OBSTEXTSOURCE"
  "OBSVIDEOSOURCE"
  "OBS_SCENEITEM_INFO"
  "OUTPUTVOLUMEINFO"
  "PHONECASTINGINFO"
  "PREVIEWCANVASMODECHANGE"
  "PREVIEWSZCHANGE"
  "PREVIEWWINDOWSZINFO"
  "REMOTEESTABLISH"
  "SETALLITEMUNSELECT"
  "SETDEVICEINFOREQ"
  "SETDEVICEINFORESP"
  "SETINPUTVOLUME"
  "SETOUTPUTVOLUME"
  "STARTREMOTEINFOREQ"
  "STARTREMOTEINFORESP"
  "UPDATEINPUTINFOREQ"
  "UPDATEINPUTINFORESP"
  "UPDATEOUTPUTINFOREQ"
  "UPDATEOUTPUTINFORESP";

static const ::PROTOBUF_NAMESPACE_ID::internal::EnumEntry MsgType_entries[] = {
  { {MsgType_names + 0, 17}, 10015 },
  { {MsgType_names + 17, 18}, 10016 },
  { {MsgType_names + 35, 18}, 10018 },
  { {MsgType_names + 53, 19}, 10019 },
  { {MsgType_names + 72, 15}, 10033 },
  { {MsgType_names + 87, 22}, 10006 },
  { {MsgType_names + 109, 22}, 10005 },
  { {MsgType_names + 131, 16}, 10003 },
  { {MsgType_names + 147, 15}, 10004 },
  { {MsgType_names + 162, 12}, 10039 },
  { {MsgType_names + 174, 14}, 10026 },
  { {MsgType_names + 188, 25}, 10029 },
  { {MsgType_names + 213, 26}, 10030 },
  { {MsgType_names + 239, 13}, 10031 },
  { {MsgType_names + 252, 13}, 10022 },
  { {MsgType_names + 265, 10}, 10032 },
  { {MsgType_names + 275, 14}, 10012 },
  { {MsgType_names + 289, 11}, 10040 },
  { {MsgType_names + 300, 18}, 10020 },
  { {MsgType_names + 318, 19}, 10021 },
  { {MsgType_names + 337, 11}, 10010 },
  { {MsgType_names + 348, 13}, 10011 },
  { {MsgType_names + 361, 14}, 10013 },
  { {MsgType_names + 375, 18}, 10007 },
  { {MsgType_names + 393, 16}, 10034 },
  { {MsgType_names + 409, 16}, 10027 },
  { {MsgType_names + 425, 23}, 10009 },
  { {MsgType_names + 448, 15}, 10028 },
  { {MsgType_names + 463, 19}, 10008 },
  { {MsgType_names + 482, 15}, 10041 },
  { {MsgType_names + 497, 18}, 10025 },
  { {MsgType_names + 515, 16}, 10023 },
  { {MsgType_names + 531, 17}, 10024 },
  { {MsgType_names + 548, 14}, 10014 },
  { {MsgType_names + 562, 15}, 10017 },
  { {MsgType_names + 577, 18}, 10001 },
  { {MsgType_names + 595, 19}, 10002 },
  { {MsgType_names + 614, 18}, 10035 },
  { {MsgType_names + 632, 19}, 10036 },
  { {MsgType_names + 651, 19}, 10037 },
  { {MsgType_names + 670, 20}, 10038 },
};

static const int MsgType_entries_by_number[] = {
  35, // 10001 -> STARTREMOTEINFOREQ
  36, // 10002 -> STARTREMOTEINFORESP
  7, // 10003 -> LIVEOUTPUT_START
  8, // 10004 -> LIVEOUTPUT_STOP
  6, // 10005 -> LIVEOUTPUT_FRAME_VIDEO
  5, // 10006 -> LIVEOUTPUT_FRAME_AUDIO
  23, // 10007 -> OBS_SCENEITEM_INFO
  28, // 10008 -> PREVIEWWINDOWSZINFO
  26, // 10009 -> PREVIEWCANVASMODECHANGE
  20, // 10010 -> OBSITEMINFO
  21, // 10011 -> OBSTEXTSOURCE
  16, // 10012 -> OBSIMAGESOURCE
  22, // 10013 -> OBSVIDEOSOURCE
  33, // 10014 -> SETINPUTVOLUME
  0, // 10015 -> GETINPUTVOLUMEREQ
  1, // 10016 -> GETINPUTVOLUMERESP
  34, // 10017 -> SETOUTPUTVOLUME
  2, // 10018 -> GETOUTPUTVOLUMEREQ
  3, // 10019 -> GETOUTPUTVOLUMERESP
  18, // 10020 -> OBSITEMEDITINFOREQ
  19, // 10021 -> OBSITEMEDITINFORESP
  14, // 10022 -> OBSDEVICEINFO
  31, // 10023 -> SETDEVICEINFOREQ
  32, // 10024 -> SETDEVICEINFORESP
  30, // 10025 -> SETALLITEMUNSELECT
  10, // 10026 -> MOUSEMENUEVENT
  25, // 10027 -> PHONECASTINGINFO
  27, // 10028 -> PREVIEWSZCHANGE
  11, // 10029 -> OBSCAMERAVIDEOBEAUTIFYREQ
  12, // 10030 -> OBSCAMERAVIDEOBEAUTIFYRESP
  13, // 10031 -> OBSCURSORINFO
  15, // 10032 -> OBSFPSINFO
  4, // 10033 -> INPUTVOLUMEINFO
  24, // 10034 -> OUTPUTVOLUMEINFO
  37, // 10035 -> UPDATEINPUTINFOREQ
  38, // 10036 -> UPDATEINPUTINFORESP
  39, // 10037 -> UPDATEOUTPUTINFOREQ
  40, // 10038 -> UPDATEOUTPUTINFORESP
  9, // 10039 -> MEANRATEINFO
  17, // 10040 -> OBSITEMEDIT
  29, // 10041 -> REMOTEESTABLISH
};

const std::string& MsgType_Name(
    MsgType value) {
  static const bool dummy =
      ::PROTOBUF_NAMESPACE_ID::internal::InitializeEnumStrings(
          MsgType_entries,
          MsgType_entries_by_number,
          41, MsgType_strings);
  (void) dummy;
  int idx = ::PROTOBUF_NAMESPACE_ID::internal::LookUpEnumName(
      MsgType_entries,
      MsgType_entries_by_number,
      41, value);
  return idx == -1 ? ::PROTOBUF_NAMESPACE_ID::internal::GetEmptyString() :
                     MsgType_strings[idx].get();
}
bool MsgType_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, MsgType* value) {
  int int_value;
  bool success = ::PROTOBUF_NAMESPACE_ID::internal::LookUpEnumValue(
      MsgType_entries, 41, name, &int_value);
  if (success) {
    *value = static_cast<MsgType>(int_value);
  }
  return success;
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace protocol
}  // namespace flremoting
PROTOBUF_NAMESPACE_OPEN
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
